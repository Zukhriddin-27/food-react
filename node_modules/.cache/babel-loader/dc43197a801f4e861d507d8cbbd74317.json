{"ast":null,"code":"var _jsxFileName = \"/Users/zuxriddinesanov/Documents/MERN/pizza/make/src/component/common/Menu/MenuItem/index.jsx\";\nimport React from 'react';\nimport ButtonAddRemoveItem from '../../ButtonAddRemoveItem';\nimport './style.css';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItems, selectCartItemsCount } from '../../../redux/cart/cart.selector';\nimport { cartAddItem, cartRemoveItem } from '../../../redux/cart/cart.action';\nimport { connect } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuItem = _ref => {\n  let {\n    item,\n    cartCount,\n    cartList,\n    cartAddItem,\n    cartRemoveItem,\n    cartclearItem\n  } = _ref;\n  const {\n    id,\n    img,\n    name,\n    info,\n    price\n  } = item;\n\n  const handleItemQuantity = () => {\n    let quantity = 0;\n\n    if (cartCount !== 0) {\n      const foundItemInCart = cartList.find(item => item.id === id);\n\n      if (foundItemInCart) {\n        quantity = foundItemInCart.quantity;\n      }\n    }\n\n    return quantity;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: \"Item image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-head_desc\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"head_desc-name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"head_desc-info\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-foot_desc\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"foot_desc-price\",\n        children: [\" $ \", price, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonAddRemoveItem, {\n        quantity: handleItemQuantity,\n        handleAddItem: () => cartAddItem(item),\n        handleRemoveItem: () => cartRemoveItem(item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MenuItem;\nconst mapStateToProps = createStructuredSelector({\n  cartCount: selectCartItemsCount,\n  cartList: selectCartItems\n});\n\nconst mapDispatchToProps = dispatch => {\n  cartAddItem: item => dispatch(cartAddItem(item));\n\n  cartRemoveItem: item => dispatch(cartRemoveItem(item));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuItem\");","map":{"version":3,"sources":["/Users/zuxriddinesanov/Documents/MERN/pizza/make/src/component/common/Menu/MenuItem/index.jsx"],"names":["React","ButtonAddRemoveItem","createStructuredSelector","selectCartItems","selectCartItemsCount","cartAddItem","cartRemoveItem","connect","useDispatch","MenuItem","item","cartCount","cartList","cartclearItem","id","img","name","info","price","handleItemQuantity","quantity","foundItemInCart","find","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AACA,OAAO,aAAP;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SACEC,eADF,EAEEC,oBAFF,QAGO,mCAHP;AAIA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,iCAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,QAAQ,GAAG,QAOX;AAAA,MAPY;AAChBC,IAAAA,IADgB;AAEhBC,IAAAA,SAFgB;AAGhBC,IAAAA,QAHgB;AAIhBP,IAAAA,WAJgB;AAKhBC,IAAAA,cALgB;AAMhBO,IAAAA;AANgB,GAOZ;AACJ,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,GAAN;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,IAAjB;AAAuBC,IAAAA;AAAvB,MAAiCR,IAAvC;;AAEA,QAAMS,kBAAkB,GAAG,MAAM;AAC/B,QAAIC,QAAQ,GAAG,CAAf;;AACA,QAAIT,SAAS,KAAK,CAAlB,EAAqB;AACnB,YAAMU,eAAe,GAAGT,QAAQ,CAACU,IAAT,CAAeZ,IAAD,IAAUA,IAAI,CAACI,EAAL,KAAYA,EAApC,CAAxB;;AACA,UAAIO,eAAJ,EAAqB;AACnBD,QAAAA,QAAQ,GAAGC,eAAe,CAACD,QAA3B;AACD;AACF;;AACD,WAAOA,QAAP;AACD,GATD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEL,GAAV;AAAe,MAAA,GAAG,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA,kBAA+BC;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA,+BACE;AAAA,oBAAQC;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA,0BAAsCC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,mBAAD;AACE,QAAA,QAAQ,EAAEC,kBADZ;AAEE,QAAA,aAAa,EAAE,MAAMd,WAAW,CAACK,IAAD,CAFlC;AAGE,QAAA,gBAAgB,EAAE,MAAMJ,cAAc,CAACI,IAAD;AAHxC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAvCD;;KAAMD,Q;AAwCN,MAAMc,eAAe,GAAGrB,wBAAwB,CAAC;AAC/CS,EAAAA,SAAS,EAAEP,oBADoC;AAE/CQ,EAAAA,QAAQ,EAAET;AAFqC,CAAD,CAAhD;;AAKA,MAAMqB,kBAAkB,GAAIC,QAAD,IAAc;AACvCpB,EAAAA,WAAW,EAAGK,IAAD,IAAUe,QAAQ,CAACpB,WAAW,CAACK,IAAD,CAAZ,CAAlB;;AACbJ,EAAAA,cAAc,EAAGI,IAAD,IAAUe,QAAQ,CAACnB,cAAc,CAACI,IAAD,CAAf,CAAlB;AACjB,CAHD;;AAIA,eAAeH,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cf,QAA7C,CAAf","sourcesContent":["import React from 'react'\nimport ButtonAddRemoveItem from '../../ButtonAddRemoveItem'\nimport './style.css'\nimport { createStructuredSelector } from 'reselect'\nimport {\n  selectCartItems,\n  selectCartItemsCount,\n} from '../../../redux/cart/cart.selector'\nimport { cartAddItem, cartRemoveItem } from '../../../redux/cart/cart.action'\nimport { connect } from 'react-redux'\n\nimport { useDispatch } from 'react-redux'\n\nconst MenuItem = ({\n  item,\n  cartCount,\n  cartList,\n  cartAddItem,\n  cartRemoveItem,\n  cartclearItem,\n}) => {\n  const { id, img, name, info, price } = item\n\n  const handleItemQuantity = () => {\n    let quantity = 0\n    if (cartCount !== 0) {\n      const foundItemInCart = cartList.find((item) => item.id === id)\n      if (foundItemInCart) {\n        quantity = foundItemInCart.quantity\n      }\n    }\n    return quantity\n  }\n  return (\n    <div className='item'>\n      <img src={img} alt='Item image' />\n      <div className='item-head_desc'>\n        <p className='head_desc-name'>{name}</p>\n        <p className='head_desc-info'>\n          <small>{info}</small>\n        </p>\n      </div>\n      <div className='item-foot_desc'>\n        <span className='foot_desc-price'> $ {price} </span>\n        <ButtonAddRemoveItem\n          quantity={handleItemQuantity}\n          handleAddItem={() => cartAddItem(item)}\n          handleRemoveItem={() => cartRemoveItem(item)}\n        />\n      </div>\n    </div>\n  )\n}\nconst mapStateToProps = createStructuredSelector({\n  cartCount: selectCartItemsCount,\n  cartList: selectCartItems,\n})\n\nconst mapDispatchToProps = (dispatch) => {\n  cartAddItem: (item) => dispatch(cartAddItem(item))\n  cartRemoveItem: (item) => dispatch(cartRemoveItem(item))\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuItem)\n"]},"metadata":{},"sourceType":"module"}